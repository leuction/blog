on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Checkout Posts
        uses: actions/checkout@v3
        with:
          repository: leuction/knowledgebase
          token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
          path: _knowledgebase

      - name: Remove the origin blog folder
        run: rm -rf ./data/blog

      - name: Copy the knowledgebase blog folder to the origin blog
        run: cp -R ./_knowledgebase/blog ./data

      - name: Delete the knowledgebase folder
        run: rm -rf ./_knowledgebase

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - name: Cache yarn packages
      #   uses: actions/cache@v3
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # - name: Setup Node 18
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      # - name: Build
      #   run: |
      #     yarn install --frozen-lockfile
      #     yarn build

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2

      - name: Deploy to Production (Staging)
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-stagging
        if: steps.branch-name.outputs.is_default == 'false' && github.event_name != 'workflow_dispatch'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Deploy to Production (Production)
        uses: amondnet/vercel-action@v20
        id: deploy-vercel-production
        if: steps.branch-name.outputs.is_default == 'true' || github.event_name == 'workflow_dispatch'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}
